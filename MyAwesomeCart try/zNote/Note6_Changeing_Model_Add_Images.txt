Change Product table in model.py. Also add Image : 

As our website never stay still as we keep on updating our website time by time.
Which means we also have to change our table or model of our website/project.
It can be done very esaily using django.




Change Product table in model.py. Also add Image : 

class Product(models.Model):
    product_id = models.AutoField
    product_name = models.CharField(max_length=50)
    desciption = models.CharField(max_length=300)
    publish_date = models.DateField()


To

class Product(models.Model):
    product_id = models.AutoField
    product_name = models.CharField(max_length=50)
    category = models.CharField(max_length=50, default="")
    sub_category = models.CharField(max_length=50)
    price = models.IntegerField()
    desciption = models.CharField(max_length=300)
    publish_date = models.DateField()
    image = models.ImageField(upload_to="shop/images")


Now create migration
cmd : python manage.py makemigrations

C:\Users\SimbA\PycharmProjects\MyAwesomeCart\Mac>python manage.py makemigrations
SystemCheckError: System check identified some issues:

ERRORS:
shop.Product.image: (fields.E210) Cannot use ImageField because Pillow is not installed.
        HINT: Get Pillow at https://pypi.org/project/Pillow/ or run command "python -m pip install Pillow".

When you try to make migration it gives error as we are adding imgae in our table . Here we are using ImageField(Field_Reference)
we have to first install Pillow to use ImageField.

So,
cmd : python -m pip install Pillow

Now after installing Pillow make migration.


C:\Users\SimbA\PycharmProjects\MyAwesomeCart\Mac>python manage.py makemigrations
You are trying to add a non-nullable field 'image' to product without a default; we can't do that (the database needs something to populate existing rows).
Please select a fix:
 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)
 2) Quit, and let me add a default in models.py


Now type 2 and add default in all Field_Reference:
class Product(models.Model):
    product_id = models.AutoField
    product_name = models.CharField(max_length=50)
    category = models.CharField(max_length=50, default="")
    sub_category = models.CharField(max_length=50, default="")
    price = models.IntegerField(default="0")
    desciption = models.CharField(max_length=300)
    publish_date = models.DateField()
    image = models.ImageField(upload_to="shop/images", default="")


And finally make migration:
cmd : python manage.py makemigrations

C:\Users\SimbA\PycharmProjects\MyAwesomeCart\Mac>python manage.py makemigrations
Migrations for 'shop':
  shop\migrations\0002_auto_20210504_1930.py
    - Add field category to product
    - Add field image to product
    - Add field price to product
    - Add field sub_category to product

Migration is made and see it in shop/migrations : 0002_auto_20210504_1930.py

Now save all these changes on Field_Reference into database also:
cmd : python manage.py migrate

C:\Users\SimbA\PycharmProjects\MyAwesomeCart\Mac>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions, shop
Running migrations:
  Applying shop.0002_auto_20210504_1930... OK




Now login to Admin Pannel
See in Product table you can see two objects 1 and 2 so inorder to make it readable use __str__ method.

class Product(models.Model):

    product_id = models.AutoField
    product_name = models.CharField(max_length=50)
    category = models.CharField(max_length=50, default="")
    sub_category = models.CharField(max_length=50, default="")
    price = models.IntegerField(default="0")
    desciption = models.CharField(max_length=300)
    publish_date = models.DateField()
    image = models.ImageField(upload_to="shop/images", default="")

    def __str__(self):
        return self.product_name


Now you may think that we should make migration as we have made change in model.py file
so you may de :
C:\Users\SimbA\PycharmProjects\MyAwesomeCart\Mac>python manage.py makemigrations
No changes detected

As expected here we have to make migration if we make change in attributes/property of model/class/table Which is Product class over here.
As you can see we made change, add __str__ method of Product class so no need to make migration or apply migrate.
Here we just added __str__ method and have not made any change in Product model

Finally goto admin login and see the Products table you can see the product_name.


Now To to Admin_page/Product_Table and Edit products and save.
Now see in Shop app images folder is created automatically inside shop app when we add image from admin page and image is inside image folder.
shop/images  ==> save/upload image/file from admin pannel 


But this is not recomended way to upload files in django. 
So will do it in recomended way.
We will learn how to define media_directory and media_url and push all media in that folder.









